# .github/workflows/cicd-pipeline.yml

name: CI & CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # JOB 1: Lints the code and builds the frontend application.
  lint-and-build:
    name: Lint & Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Frontend Dependencies
      run: npm install --force

    - name: Install Backend Dependencies
      run: |
        pip install -r backend/requirements.txt
        pip install pylint

    - name: Lint Backend Code
      run: npm run lint:backend

    - name: Build Frontend Application
      run: npm run build

  # JOB 2: Runs security scans for vulnerable dependencies (SCA) and secrets.
  security-scans:
    name: Security Scans (SCA & Secrets)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: pip install -r backend/requirements.txt

    - name: Software Component Analysis (SCA) with pip-audit
      run: |
        pip install pip-audit
        pip-audit

    - name: Static Application Security Testing (SAST) with Gitleaks
      uses: gitleaks/gitleaks-action@v2
      with:
        config-path: .gitleaks.toml

  # JOB 3: Performs in-depth static analysis with CodeQL.
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python, javascript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # JOB 4: Runs unit tests for both frontend and backend.
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Frontend Dependencies
      run: npm ci --force

    - name: Install Backend Dependencies
      run: |
        pip install -r backend/requirements.txt
        pip install pytest

    - name: Run Frontend Unit Tests
      run: npm run test:frontend

    - name: Run Backend Unit Tests
      run: pytest backend/open_webui/test/

  # JOB 5: Builds and pushes the Docker image to Docker Hub.
  # This job will ONLY run after the CI jobs above succeed, and only on a push to main.
  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [lint-and-build, security-scans, codeql-analysis, unit-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/open-webui:latest